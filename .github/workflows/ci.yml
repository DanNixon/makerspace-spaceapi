---
name: CI

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:

jobs:
  formatting-and-quality:
    name: Formatting and Quality
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v20

      - name: Format
        run: |
          eval "$(nix print-dev-env)"
          cargo fmt -- --check

      - name: Clippy
        run: |
          eval "$(nix print-dev-env)"
          cargo clippy -- -Dwarnings

  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v20

      - name: Build and Test
        run: |
          eval "$(nix print-dev-env)"
          cargo build --all-targets
          cargo test --all-targets

  container-image:
    name: Build and push container image
    if: ${{ github.ref_name == 'main' || github.ref_type == 'tag' }}
    needs:
      - build-and-test
      - formatting-and-quality
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Derive tags
        run: |
          echo 'tags<<EOF' >> $GITHUB_ENV
          if [[ "${{ github.ref_type }}" == 'tag' ]]; then
            echo "latest ${{ github.ref_name }} ${{ github.sha }}" >> $GITHUB_ENV
          else
            echo "${{ github.ref_name }} ${{ github.sha }}" >> $GITHUB_ENV
          fi
          echo 'EOF' >> $GITHUB_ENV

      - name: Build container image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: makerspace-spaceapi
          tags: "${{ env.tags }}"
          containerfiles: ./Containerfile
          oci: true

      - name: Push image to GHCR
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ghcr.io/dannixon
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}
